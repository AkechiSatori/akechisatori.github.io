<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>网易云音乐听歌识曲 API 逆向 (二)</title>
      <link href="/netease-eapi-music-recgonize-reverse-2/"/>
      <url>/netease-eapi-music-recgonize-reverse-2/</url>
      
        <content type="html"><![CDATA[<p>前两天看到网易云音乐发布了一个网页上做音乐识别的 <a href="https://juejin.cn/post/7094083239702659109">Chrome 插件</a></p><p><img src="https://s2.loli.net/2022/05/12/sdvE3LHGx19owOY.png" alt="netease-chrome-recgonize"></p><p>于是立即下载了一份来研究</p><p><img src="https://s2.loli.net/2022/05/12/XwcgmIPYsuLpCBf.png" alt="source"></p><p>Chrome 插件的请求方式和结构和客户端几乎一模一样</p><p><img src="https://s2.loli.net/2022/05/12/feCIWNdhlBVJXML.jpg" alt="request-struct"></p><p>根据函数栈追踪, 可以分析出比较核心的逻辑都在 <code>sandbox.bundle.js</code> 内</p><p>看起来是用了 WebAssemble 来解析网页录音, 在点击开始录音后会开始录制当前 TAB 的音频</p><p>当录音完成后就会将音频传到 WASM 暴露的函数 <code>l().ExtractQueryFP(...)</code> 中</p><p><img src="https://s2.loli.net/2022/05/12/Ljm8hg5Kztv9VHW.jpg" alt="parse-buffer"></p><p>WASM 层处理完成后就会将返回的 ArrayBuffer 封装成一个 Base64 串, 最后会将这个 Base64 串提交给 API</p><p><img src="https://s2.loli.net/2022/05/12/TEWq917khpOKZPd.jpg" alt="request-code"></p><hr><p>虽然还是不太清楚 WASM 层内部是如何处理传入的音频数据, 但是已经可以将它的代码抽出来作为一个类库了</p><p>基于插件代码制作了一份 DEMO, 可以参考 <a href="https://github.com/akinazuki/NeteaseCloudMusic-Audio-Recgonize">NeteaseCloudMusic-Audio-Recgonize</a></p><p><code>rec.json</code> 内是封装成 JSON 的录音 ArrayBuffer</p><p>运行后会在 Chrome Console 打印出音频指纹的 Base64 串</p><p><img src="https://s2.loli.net/2022/05/12/ZuSIAYHMtlxgpsk.png" alt="console"></p><p><img src="https://s2.loli.net/2022/05/12/UmwNMRthrfbzQiJ.jpg" alt="postman-test"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网易云音乐听歌识曲 API 逆向 (一)</title>
      <link href="/netease-eapi-music-recgonize-reverse-1/"/>
      <url>/netease-eapi-music-recgonize-reverse-1/</url>
      
        <content type="html"><![CDATA[<p>首先是抓了一下协议, 网易云音乐的接口本身是有加密的, 但是没关系, 已经有 <a href="https://github.com/Binaryify/NeteaseCloudMusicApi">NetEaseCloudMusic</a> 这样的项目逆向出了基本的通讯协议, 可以直接使用.</p><p><img src="https://s2.loli.net/2022/05/05/3BGhneWfKdCQzFm.png" alt="surge_mitm.png"></p><p>网易云音乐识曲会向 <code>https://music.163.com/eapi/music/audio/match?_nmclfl=1</code> 这个接口发送请求</p><p>解密后的请求体大概长这样 </p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;rawdata&quot;</span><span class="punctuation">:</span><span class="string">&quot;eJx11H9M1HUYB\/C7+2p5\/PhHTUQGwW......&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span><span class="string">&quot;recognize-song&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;verifyId&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;deviceId&quot;</span><span class="punctuation">:</span><span class="string">&quot;??????&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;os&quot;</span><span class="punctuation">:</span><span class="string">&quot;iOS&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;header&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;algorithmCode&quot;</span><span class="punctuation">:</span><span class="string">&quot;shazam_v2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;times&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sessionId&quot;</span><span class="punctuation">:</span><span class="string">&quot;??????&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;duration&quot;</span><span class="punctuation">:</span><span class="number">3.4</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;e_r&quot;</span><span class="punctuation">:</span><span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sceneParams&quot;</span><span class="punctuation">:</span><span class="string">&quot;&#123;\&quot;action\&quot;:0,\&quot;code\&quot;:2&#125;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/05/23zLWdGwqIacXoy.png" alt="response_decrypted.png"></p><p>猜测其中 <code>rawdata</code> 就是录音的 Base64 编码, 尝试解码扔进 ffprobe, 但是失败了<br>有可能 <code>rawdata</code> 是根据音频频谱生成了摘要, <code>algorithmCode</code> 字段也提示了 <code>shazam_v2</code> 这个值</p><p>接下来开始逆向 APP</p><p>下载了一份比较旧但还能用的 网易云音乐 APK</p><p><img src="https://s2.loli.net/2022/05/05/uliO4SfnUpyIN1L.png" alt="old_version_apk.png"></p><p>扔进 Jadx, 发现有比较奇特的混淆方法, 任意地方的字符串都会调用一个函数来进行解密</p><p><img src="https://s2.loli.net/2022/05/05/wrAiL2uzyHUsPD7.jpg" alt="Obfuscation.jpg"></p><p>定位到解密函数</p><p><img src="https://s2.loli.net/2022/05/05/d43Aw5fTby2h9ju.png" alt="decryptor.png"></p><p>这里的解密看起来并不困难, <code>C0003a()</code> 这个类显然是 Base64 解码用的</p><p>不过我们要写出一个反向的操作(用来方便逆向查找字符串)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> <span class="string">&quot;Encrypt&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (args[<span class="number">0</span>].equals(<span class="string">&quot;decrypt&quot;</span>)) &#123;</span><br><span class="line">            System.out.println(decrypt(args[<span class="number">1</span>]));;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(encrypt(args[<span class="number">1</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">decrypt</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="type">byte</span>[] decode = Base64.getDecoder().decode(s);</span><br><span class="line">        String str2;</span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> decode.length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">length2</span> <span class="operator">=</span> key.length();</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i3</span> <span class="operator">=</span> i2;</span><br><span class="line">            <span class="keyword">if</span> (i &gt;= length) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i4</span> <span class="operator">=</span> i3;</span><br><span class="line">            <span class="keyword">if</span> (i3 &gt;= length2) &#123;</span><br><span class="line">                i4 = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            decode[i] = (<span class="type">byte</span>) (decode[i] ^ key.charAt(i4));</span><br><span class="line">            i++;</span><br><span class="line">            i2 = i4 + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        str2 = <span class="keyword">new</span> <span class="title class_">String</span>(decode);</span><br><span class="line">        <span class="keyword">return</span> str2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">encrypt</span><span class="params">(String str_enc)</span> &#123;</span><br><span class="line">        <span class="type">byte</span>[] s = str_enc.getBytes();</span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> str_enc.length();</span><br><span class="line">        <span class="type">int</span> <span class="variable">length2</span> <span class="operator">=</span> key.length();</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i3</span> <span class="operator">=</span> i2;</span><br><span class="line">            <span class="keyword">if</span> (i &gt;= length) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i4</span> <span class="operator">=</span> i3;</span><br><span class="line">            <span class="keyword">if</span> (i3 &gt;= length2) &#123;</span><br><span class="line">                i4 = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            s[i] = (<span class="type">byte</span>) (s[i] ^ key.charAt(i4));</span><br><span class="line">            i++;</span><br><span class="line">            i2 = i4 + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Base64.getEncoder().encodeToString(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据 <code>rawdata</code> 这个关键词在 Jadx 里查找</p><p><img src="https://s2.loli.net/2022/05/05/HftdwSoXDxGZ4rK.png" alt="script.png"></p><p>确实能找到这个字符串</p><p><img src="https://s2.loli.net/2022/05/05/21eOoprbA8XMcwf.png" alt="jadx-search.png"></p><p>继续跟踪函数调用栈, 最终跟踪到了 <code>MusicDetector</code>　类</p><p><img src="https://s2.loli.net/2022/05/05/O2LAXsbWQKMmqfD.png" alt="classMusicDetector.png"></p><p>看起来是 <code>getFP()</code> 这个 Native 函数返回了一个三维数组, 最终封装成了 <code>rawdata</code></p><p><img src="https://s2.loli.net/2022/05/05/GaiMZqrzTgAUwCn.png" alt="native-getFP.png"></p><p><img src="https://s2.loli.net/2022/05/05/X27B6ZKoY38PAtd.jpg" alt="binary-reverse.jpg"></p><p>暂时跟踪不下去了, 看见汇编就头大（</p><p>敬请期待第二章（咕咕咕</p><p><img src="https://s2.loli.net/2022/05/05/btmIr6v8R9L2onp.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>